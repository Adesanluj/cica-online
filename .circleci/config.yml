
# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.11.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    #working_directory: ~/my-repo

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install dependencies
          command: |
             sudo apt-get update && sudo apt-get install -qq -y python-pip libpython-dev
             curl -O https://bootstrap.pypa.io/get-pip.py && sudo python get-pip.py
             sudo pip install -q awscli --upgrade
             sudo chown -R $(whoami):$(whoami) /usr/local
             curl -fsSL https://goss.rocks/install | sh

      - run:
          name: Build docker image
          command: |
              docker build -t $IMAGE_CONTAINER .
          
      - run:
          name: Test Image          
          command: |
            docker run -d -p 8080:3000 $IMAGE_CONTAINER
            dgoss edit -p 8080:3000 $IMAGE_CONTAINER
            goss a port 3000
            exit
            
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar $IMAGE_CONTAINER
      - persist_to_workspace:
          root: .
          paths:
            - docker-image
                    
  push:
    docker:
      - image: circleci/node:8.11.3
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace

      - run:
          name: Load image
          command: |
            docker load --input workspace/docker-image/image.tar
      - run:
          name: Push docker container to ECR repository
          command: |
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                 aws ecr get-login --no-include-email --region ${AWS_REGION}
                 docker push ${ECR_REPOSITORY}/${ECR_REPO_NAME}:$CIRCLE_SHA1
              fi



workflows:
  version: 2
  build-push:
    jobs:
      - build
      - push:
          requires:
            - build
          filters:
            branches:
              only: master



#version: 2
#jobs:
#  build:
#    docker:
#      - image: circleci/node:8.15.0-stretch
#    steps:
#      - checkout
#      - run:
#          name: install dependencies
#          command: |
#             cp src/package.json /tmp/package.json
#             cd /tmp && npm install
#      - run:
#          name: build
#          command: npm start
      #- run:
      #    name: Create placeholder directory for application resource
      #    command: |
      #       sudo mkdir -p /usr/src/app/



      ##- run:
        ##name: Authenticate with docker
        ##command: |
          ##aws ecr get-login --no-include-email --region eu-west-1 > dockerlogin.sh
          ##chmod 777 dockerlogin.sh
          ##./dockerlogin.sh
          ##rm dockerlogin.sh

      #- run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      #- run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .

      #- run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG && sleep 10

      #- store_artifacts:
      #    path: Dockerfile
      
      
      
      
      
      
#      - run:
#          name: Authenticate with ECR registry
#          command: |
#             aws ecr get-login --no-include-email --region ${AWS_REGION} > dockerlogin.sh
#             chmod 777 dockerlogin.sh
#             ./dockerlogin.sh
#             rm dockerlogin.sh
