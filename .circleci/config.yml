
# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.11.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    working_directory: ~/my-repo

    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
             cp src/package.json /tmp/package.json
             cd /tmp && npm install
            
            
#            apt-get update && apt-get install -y awscli
             
             
#             curl -O https://bootstrap.pypa.io/get-pip.py
#             python get-pip.py --user
#             export PATH=~/.local/bin:$PATH
#             pip install awscli



  package:
    docker:
      - image: circleci/node:8.11.3

    working_directory: ~/my-repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker image
          command: |
              docker build --no-cache -t cicav2-cica-online .

      - run:
          name: Authenticate with ECR registry
          command: |
             aws ecr get-login --no-include-email --region eu-west-1 > dockerlogin.sh
             chmod 777 dockerlogin.sh
             ./dockerlogin.sh
             rm dockerlogin.sh

      - run:
          name: Push docker container to ECR repository
          command: |
              docker tag cicav2-cica-online:latest 926803513772.dkr.ecr.eu-west-1.amazonaws.com/cica/cicadevelopment:circleci-demo
              docker push 926803513772.dkr.ecr.eu-west-1.amazonaws.com/cica/cicadevelopment:circleci-dem

workflows:
  version: 2
  build_and_package:
       jobs:
         - build
         - package:
             requires:
               - build






#version: 2
#jobs:
#  build:
#    docker:
#      - image: circleci/node:8.15.0-stretch
#    steps:
#      - checkout
#      - run:
#          name: install dependencies
#          command: |
#             cp src/package.json /tmp/package.json
#             cd /tmp && npm install
#      - run:
#          name: build
#          command: npm start
      #- run:
      #    name: Create placeholder directory for application resource
      #    command: |
      #       sudo mkdir -p /usr/src/app/



      ##- run:
        ##name: Authenticate with docker
        ##command: |
          ##aws ecr get-login --no-include-email --region eu-west-1 > dockerlogin.sh
          ##chmod 777 dockerlogin.sh
          ##./dockerlogin.sh
          ##rm dockerlogin.sh

      #- run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      #- run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .

      #- run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG && sleep 10

      #- store_artifacts:
      #    path: Dockerfile
